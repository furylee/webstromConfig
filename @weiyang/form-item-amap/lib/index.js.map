{"version":3,"sources":["../src/index.js"],"names":["defaultKey","toolButtonSize","MapSelect","props","state","lbs","type","tool","marker","polygon","console","log","zoom","properties","pointInfo","longitude","coordinates","latitude","paths","polygonInfo","active","path","map","point","outputs","mapInstance","getZoom","pointArr","polygonArr","push","changedValue","onChange","address","addressTextInput","current","input","value","inputType","geocoder","getLocation","status","result","info","location","geocodes","setState","lng","lat","onPointSelect","error","lnglats","split","length","warn","visible","triggerChange","convertOutputs","label","obj","text","hide","CLASS_NAME","getPosition","getPath","pathPoint","disabledPolygonTool","close","checked","React","createRef","convertInputs","toolEvents","created","openTool","draw","drawWhat","polygonEvents","dblclick","mapPlugins","pluginProps","enableHighAccuracy","timeout","showButton","amapEvents","window","AMap","service","addControl","ToolBar","Scale","Geocoder","nextProps","mapKey","openModalView","handleOk","handleCancel","height","lineHeight","onInputTypeChange","onSearch","styles","buttonContainer","onPolygonSelect","width","marginTop","layerStyle","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Row, Col, Button, Input, Modal, Message,Switch} from 'antd';\nimport {Map, Marker, MouseTool, PolyEditor, Polygon} from 'react-amap';\nimport Geolocation from 'react-amap-plugin-geolocation';\nimport styles from './index.less';\n\nconst defaultKey = \"5c7d3a7dd3595b94b5686070144ba540\";\n\n\nconst toolButtonSize = 'default';\n\nexport default class MapSelect extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addressTextInput = React.createRef();\n    let label = '未选择模式';\n    if (props.value && props.value.type === 'Point') {\n      label = '准备绘制坐标点';\n    }\n    else if (props.value && props.value.type === 'Polygon') {\n      label = '准备绘制多边形';\n    }\n    this.state = {\n      inputType:0,// 0 代表地址，1代表坐标\n      lbs: {\n        coordinates: [],\n        type: 'null',\n        properties: {}\n      },\n      pointInfo: {\n        // 预设坐标点信息\n        longitude: '118.778177',\n        latitude: '31.8383',\n      },\n      polygonInfo: {\n        // 预设多边形信息\n        path: [],\n        active: false,// 是否编辑模式\n      },\n      zoom: 15,\n      label,\n      visible: false,// 控制弹窗显示与隐藏\n      ...this.convertInputs(props.value)\n    };\n    this.toolEvents = {\n      created: (tool) => {\n        this.tool = tool;\n        this.openTool();\n      },\n      draw: ({obj}) => {\n        this.drawWhat(obj);\n      }\n    };\n    this.polygonEvents = {\n      dblclick: () => {\n        // 双击进行编辑\n        this.setState({polygonInfo: {...this.state.polygonInfo, active: !this.state.polygonInfo.active}});\n      }\n    };\n    this.mapPlugins = ['ToolBar'];\n    this.pluginProps = {\n      enableHighAccuracy: true,\n      timeout: 10000,\n      showButton: true\n    };\n    this.amapEvents = {\n      created: (mapInstance) => {\n        const {AMap} = window;\n        this.mapInstance = mapInstance;\n        AMap.service(['AMap.ToolBar', 'AMap.Scale', 'AMap.Geocoder'], () => {\n          mapInstance.addControl(new AMap.ToolBar());\n\n          mapInstance.addControl(new AMap.Scale());\n\n          this.geocoder = new AMap.Geocoder({});\n\n        })\n      }\n    };\n\n  }\n\n  openTool = () => {\n    if (this.state.lbs.type === 'Point') {\n      this.tool.marker();\n    }\n    else if (this.state.lbs.type === 'Polygon') {\n      this.tool.polygon();\n    }\n  };\n\n  convertInputs = (lbs) => {\n    console.log(lbs);\n    if (lbs) {\n      const state = {lbs, zoom: lbs.properties.zoom};\n      if (lbs.type === 'Point') {\n        state.pointInfo = {longitude: lbs.coordinates[0], latitude: lbs.coordinates[1]}\n      }\n      else if (lbs.type === 'Polygon') {\n        const paths = lbs.coordinates[0];\n        state.polygonInfo = {active: false, path: paths.map((point) => ({longitude: point[0], latitude: point[1]}))};\n      }\n      return state;\n    }\n    else {\n      return {};\n    }\n  };\n  convertOutputs = () => {\n    const {lbs, pointInfo, polygonInfo} = this.state;\n    const outputs = {\n      type: lbs.type,\n      properties: {zoom: this.mapInstance.getZoom()}\n    };\n    if (lbs.type === 'Point') {\n      const pointArr = [pointInfo.longitude, pointInfo.latitude];\n      outputs.coordinates = pointArr;\n\n    }\n    else if (lbs.type === 'Polygon') {\n      const polygonArr = polygonInfo.path.map((point) => {\n        return [point.longitude, point.latitude]\n      });\n      polygonArr.push(polygonArr[0]);\n      outputs.coordinates = [polygonArr];\n    }\n    return outputs;\n\n  };\n\n\n  componentWillReceiveProps(nextProps) {\n    // 此处比较nextProps和this.props 提高性能 待实现\n    if ('value' in nextProps) {\n      const {value} = nextProps;\n      if (value) {\n        this.setState({...this.convertInputs(value)});\n      }\n    }\n  }\n\n  triggerChange = (changedValue) => {\n    // 反馈表单项数据\n    const {onChange} = this.props;\n    if (onChange) {\n      onChange({...changedValue});\n    }\n  };\n\n  onSearch = () => {\n    const address = this.addressTextInput.current.input.value;\n    if (address !== '') {\n      if(this.state.inputType===0) {\n        this.geocoder.getLocation(address, (status, result) => {\n          if (status === 'complete' && result.info === 'OK') {\n            const {location} = result.geocodes[0];\n            this.setState({\n              lbs: {...this.state.lbs, type: 'Point'},\n              pointInfo: {longitude: location.lng, latitude: location.lat}\n            },()=>{\n              this.onPointSelect();\n            });\n          } else {\n            // 获取经纬度失败\n            Message.error('获取经纬度失败，建议点击地图右上角自动定位或者直接地图取点的方式');\n          }\n        });\n      }\n      else{\n        // 以逗号分隔坐标\n        const lnglats=address.split(',');\n        if(lnglats.length===2)\n        {\n          this.setState({\n            lbs: {...this.state.lbs, type: 'Point'},\n            pointInfo: {longitude: lnglats[0], latitude: lnglats[1]}\n          },()=>{\n            this.onPointSelect();\n          });\n        }\n        else{\n          Message.error('坐标值请以单个半角逗号分隔');\n        }\n      }\n\n    }\n    else {\n      Message.warn('请输入详细地址信息或者坐标');\n    }\n  };\n\n  openModalView = () => {\n    this.setState({visible: true});\n\n  };\n\n  handleOk = () => {\n    // 转储信息，输出到表单外部\n    this.triggerChange(this.convertOutputs());\n    this.setState({visible: false});\n  };\n\n  handleCancel = () => {\n    this.setState({visible: false});\n  };\n\n\n  disabledPolygonTool = () => {\n    this.setState({polygonInfo: {...this.state.polygonInfo, active: false}});\n  };\n\n\n  onPointSelect = () => {\n    if (this.tool) {\n      this.tool.marker();\n      this.setState({\n        lbs: {...this.state.lbs, type: 'Point'},\n        label: '准备绘制坐标点',\n        polygonInfo: {...this.state.polygonInfo, active: false}\n      });\n    }\n  };\n\n  onPolygonSelect = () => {\n    if (this.tool) {\n      this.tool.polygon();\n      this.setState({\n        lbs: {...this.state.lbs, type: 'Polygon'},\n        label: '准备绘制多边形',\n        polygonInfo: {...this.state.polygonInfo, active: false}\n      });\n    }\n  };\n\n  drawWhat = (obj) => {\n    let text = '';\n    obj.hide();\n    switch (obj.CLASS_NAME) {\n      case 'AMap.Marker':\n        text = `你绘制了一个标记，坐标位置是 {${obj.getPosition()}}`;\n        // 获取点信息，并隐藏掉组件绘制的覆盖物\n        const point = obj.getPosition();\n        this.setState({\n          label: text,\n          pointInfo: {longitude: point.lng, latitude: point.lat}\n        });\n\n        break;\n      case 'AMap.Polygon':\n        const path = obj.getPath().map((pathPoint) => ({longitude: pathPoint.lng, latitude: pathPoint.lat}));\n        text = `你绘制了一个多边形，有${path.length}个端点`;\n        this.setState({\n          label: text,\n          polygonInfo: {...this.state.polygonInfo, path}\n        });\n        break;\n      default:\n        text = '';\n    }\n  };\n\n  // 关闭鼠标工具\n  close = () => {\n    this.disabledPolygonTool();\n    if (this.tool) {\n      this.tool.close();\n    }\n    this.setState({\n      lbs: {...this.state.lbs, type: 'null'},\n      label: '未选择模式'\n    });\n  };\n\n  //\n  onInputTypeChange=(checked)=>{\n    this.setState({inputType:checked?0:1});\n  };\n\n\n  render() {\n    const {mapKey} = this.props;\n    return (\n      <div>\n        <Row>\n          <Button onClick={this.openModalView}>定位</Button>\n          <Col span={24}>\n            <Modal\n              title=\"地图选择\"\n              visible={this.state.visible}\n              width={800}\n              destroyOnClose=\"true\"\n              onOk={this.handleOk}\n              onCancel={this.handleCancel}\n            >\n              <Row>\n                <Col span={2} style={{height:32,lineHeight:'30px'}}>\n                  <Switch checkedChildren=\"地址\" unCheckedChildren=\"坐标\" checked={this.state.inputType===0} onChange={this.onInputTypeChange} />\n                </Col>\n                <Col span={6}>\n                  <Input ref={this.addressTextInput} />\n                </Col>\n                <Col span={2} />\n                <Col span={6}>\n                  <Button onClick={this.onSearch}>搜索</Button>\n                </Col>\n                <Col span={8} className={styles.buttonContainer}>\n                  <Button\n                    className=\"opButton\"\n                    type={this.state.lbs.type === 'Point' ? 'primary' : null}\n                    size={toolButtonSize}\n                    onClick={this.onPointSelect}\n                  >选点\n                  </Button>\n                  <Button\n                    className=\"opButton\"\n                    type={this.state.lbs.type === 'Polygon' ? 'primary' : null}\n                    size={toolButtonSize}\n                    onClick={this.onPolygonSelect}\n                  >选区域\n                  </Button>\n                  <Button\n                    className=\"opButton\"\n                    type={this.state.lbs.type === 'null' ? 'primary' : null}\n                    size={toolButtonSize}\n                    onClick={this.close}\n                  >取消操作\n                  </Button>\n                </Col>\n                <Col span={24}>\n                  <div style={{width: '100%', height: 500, marginTop: 8}}>\n                    <Map\n                      plugins={this.mapPlugins}\n                      amapkey={mapKey || defaultKey}\n                      zoom={this.state.zoom}\n                      center={this.state.pointInfo}\n                      events={this.amapEvents}\n                    >\n                      <div className={styles.layerStyle}>{this.state.label}</div>\n                      <MouseTool events={this.toolEvents} />\n                      <Geolocation {...this.pluginProps} />\n                      {\n                        this.state.lbs.type === 'Point' ?\n                          <Marker position={this.state.pointInfo} />\n                          : null\n                      }\n\n                      {this.state.lbs.type === 'Polygon' ? (\n                        <Polygon events={this.polygonEvents} path={this.state.polygonInfo.path}>\n                          <PolyEditor active={this.state.polygonInfo.active} />\n                        </Polygon>\n                      ) : null\n                      }\n                    </Map>\n                  </div>\n                </Col>\n              </Row>\n            </Modal>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n"],"file":"index.js"}